{
    "AWSTemplateFormatVersion": "2010-09-09",
	"Description": "AWS CloudFormation Template for ALB with TargetGroup",
    "Parameters": {
        "ALBSecGroup": {
            "Type": "AWS::EC2::SecurityGroup::Id",
            "Description": "Select the ALB Security Group ID "
        },
        "PrivateSubnet01": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select a private subnet in AZ-1 in the VPC"
        },
        "PrivateSubnet02": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "Select a private subnet in AZ-2 in the VPC"
        },
        "VPC01": {
            "Type": "AWS::EC2::VPC::Id",
			"Description":"Select the VPC."
        },
       "Environment" : {
			"Type" : "String",
			"Description" : "Enter the environment name as dev/qa/perf/uat/sec/prod/dr",
			"AllowedValues" : ["dev","perf","qa","uat","sec","prod","pen","uat1","dr"],
			"Default" : "dev",
			"MaxLength": 4,
			"MinLength": 2
		},
		"AppName": {
			"Type": "String",
			"Default": "order-serv",
			"Description": "Application Name"
		}
    },
    "Resources": {
        "basketALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Sub": "orderserv-${Environment}-basket-alb"
                },
				"LoadBalancerAttributes": [
					 { "Key" : "deletion_protection.enabled",
					   "Value" : "false"
					 },
					 { "Key" : "routing.http.drop_invalid_header_fields.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.bucket",
					   "Value" : {
						"Fn::Sub": "orderserv-${AWS::Region}-${Environment}-logs"
						}
					 },
					 { "Key" : "access_logs.s3.prefix",
					   "Value" : "alb"
					 }
				],
                "Scheme": "internal",
                "SecurityGroups": [{
                    "Ref": "ALBSecGroup"
                }],
                "Subnets": [
                    {"Ref": "PrivateSubnet01"},
                    {"Ref": "PrivateSubnet02"}
                ],
                "Tags": [
                    {"Key": "Name", "Value": { "Fn::Sub": "orderserv-${Environment}-basket-alb" } }, 
					{"Key": "AppName", "Value": { "Ref": "AppName" }},
					{"Key": "Environment", "Value": { "Ref": "Environment" }},
					{"Key": "Tenant", "Value":"all"}
                ]
            }
        },
        "basketalbListener" :{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
			"DependsOn" : "basketALB",
            "Properties": {
                "DefaultActions": [{
                    "Type": "fixed-response",
					"FixedResponseConfig": {
					"ContentType" : "text/html",
					"MessageBody" : "<html><head><title>404 Error Page</title></head><body><div class=\"container\"><h1>BASKET 404</h1><h2>Page Not Found: Error from Basket ALB Rule</h2><p>The Page you are looking for doesn't exist or an other error occured.</p></div></body></html>",
					"StatusCode": "404" }
                }],
                "LoadBalancerArn": {
                    "Ref": "basketALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
		"storeALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Sub": "orderserv-${Environment}-store-alb"
                },
				"LoadBalancerAttributes": [
					 { "Key" : "deletion_protection.enabled",
					   "Value" : "false"
					 },
					 { "Key" : "routing.http.drop_invalid_header_fields.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.bucket",
					   "Value" : {
						"Fn::Sub": "orderserv-${AWS::Region}-${Environment}-logs"
						}
					 },
					 { "Key" : "access_logs.s3.prefix",
					   "Value" : "alb"
					 }
				],
                "Scheme": "internal",
                "SecurityGroups": [{
                    "Ref": "ALBSecGroup"
                }],
                "Subnets": [
                    {"Ref": "PrivateSubnet01"},
                    {"Ref": "PrivateSubnet02"}
                ],
                "Tags": [
                    {"Key": "Name", "Value": { "Fn::Sub": "orderserv-${Environment}-store-alb" } }, 
					{"Key": "AppName", "Value": { "Ref": "AppName" }},
					{"Key": "Environment", "Value": { "Ref": "Environment" }},
					{"Key": "Tenant", "Value": "all"}
                ]
            }
        },
        "storealbListener" :{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
			"DependsOn" : "storeALB",
            "Properties": {
                "DefaultActions": [{
                    "Type": "fixed-response",
					"FixedResponseConfig": {
					"ContentType" : "text/html",
					"MessageBody" : "<html><head><title>404 Error Page</title></head><body><div class=\"container\"><h1>store 404</h1><h2>Page Not Found: Error from store ALB Rule</h2><p>The Page you are looking for doesn't exist or an other error occured.</p></div></body></html>",
					"StatusCode": "404" }
                }],
                "LoadBalancerArn": {
                    "Ref": "storeALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },	
		"paymentALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Sub": "orderserv-${Environment}-payment-alb"
                },
				"LoadBalancerAttributes": [
					 { "Key" : "deletion_protection.enabled",
					   "Value" : "false"
					 },
					 { "Key" : "routing.http.drop_invalid_header_fields.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.bucket",
					   "Value" : {
						"Fn::Sub": "orderserv-${AWS::Region}-${Environment}-logs"
						}
					 },
					 { "Key" : "access_logs.s3.prefix",
					   "Value" : "alb"
					 }
				],
                "Scheme": "internal",
                "SecurityGroups": [{
                    "Ref": "ALBSecGroup"
                }],
                "Subnets": [
                    {"Ref": "PrivateSubnet01"},
                    {"Ref": "PrivateSubnet02"}
                ],
                "Tags": [
                    {"Key": "Name", "Value": { "Fn::Sub": "orderserv-${Environment}-payment-alb" } }, 
					{"Key": "AppName", "Value": { "Ref": "AppName" }},
					{"Key": "Environment", "Value": { "Ref": "Environment" }},
					{"Key": "Tenant", "Value": "all"}
                ]
            }
        },
        "paymentalbListener" :{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
			"DependsOn" : "paymentALB",
            "Properties": {
                "DefaultActions": [{
                    "Type": "fixed-response",
					"FixedResponseConfig": {
					"ContentType" : "text/html",
					"MessageBody" : "<html><head><title>404 Error Page</title></head><body><div class=\"container\"><h1>payment 404</h1><h2>Page Not Found: Error from payment ALB Rule</h2><p>The Page you are looking for doesn't exist or an other error occured.</p></div></body></html>",
					"StatusCode": "404" }
                }],
                "LoadBalancerArn": {
                    "Ref": "paymentALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },	
		"customerALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Sub": "orderserv-${Environment}-customer-alb"
                },
				"LoadBalancerAttributes": [
					 { "Key" : "deletion_protection.enabled",
					   "Value" : "false"
					 },
					 { "Key" : "routing.http.drop_invalid_header_fields.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.bucket",
					   "Value" : {
						"Fn::Sub": "orderserv-${AWS::Region}-${Environment}-logs"
						}
					 },
					 { "Key" : "access_logs.s3.prefix",
					   "Value" : "alb"
					 }
				],
                "Scheme": "internal",
                "SecurityGroups": [{
                    "Ref": "ALBSecGroup"
                }],
                "Subnets": [
                    {"Ref": "PrivateSubnet01"},
                    {"Ref": "PrivateSubnet02"}
                ],
                "Tags": [
                    {"Key": "Name", "Value": { "Fn::Sub": "orderserv-${Environment}-customer-alb" } }, 
					{"Key": "AppName", "Value": { "Ref": "AppName" }},
					{"Key": "Environment", "Value": { "Ref": "Environment" }},
					{"Key": "Tenant", "Value": "all"}
                ]
            }
        },
        "customeralbListener" :{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
			"DependsOn" : "customerALB",
            "Properties": {
                "DefaultActions": [{
                    "Type": "fixed-response",
					"FixedResponseConfig": {
					"ContentType" : "text/html",
					"MessageBody" : "<html><head><title>404 Error Page</title></head><body><div class=\"container\"><h1>customer 404</h1><h2>Page Not Found: Error from customer ALB Rule</h2><p>The Page you are looking for doesn't exist or an other error occured.</p></div></body></html>",
					"StatusCode": "404" }
                }],
                "LoadBalancerArn": {
                    "Ref": "customerALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },	
				"menupromotionALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Sub": "orderserv-${Environment}-menupromtn-alb"
                },
				"LoadBalancerAttributes": [
					 { "Key" : "deletion_protection.enabled",
					   "Value" : "false"
					 },
					 { "Key" : "routing.http.drop_invalid_header_fields.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.bucket",
					   "Value" : {
						"Fn::Sub": "orderserv-${AWS::Region}-${Environment}-logs"
						}
					 },
					 { "Key" : "access_logs.s3.prefix",
					   "Value" : "alb"
					 }
				],
                "Scheme": "internal",
                "SecurityGroups": [{
                    "Ref": "ALBSecGroup"
                }],
                "Subnets": [
                    {"Ref": "PrivateSubnet01"},
                    {"Ref": "PrivateSubnet02"}
                ],
                "Tags": [
                    {"Key": "Name", "Value": { "Fn::Sub": "orderserv-${Environment}-menupromtn-alb" } }, 
					{"Key": "AppName", "Value": { "Ref": "AppName" }},
					{"Key": "Environment", "Value": { "Ref": "Environment" }},
					{"Key": "Tenant", "Value": "all"}
                ]
            }
        },
        "menupromotionalbListener" :{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
			"DependsOn" : "menupromotionALB",
            "Properties": {
                "DefaultActions": [{
                    "Type": "fixed-response",
					"FixedResponseConfig": {
					"ContentType" : "text/html",
					"MessageBody" : "<html><head><title>404 Error Page</title></head><body><div class=\"container\"><h1>menupromotion 404</h1><h2>Page Not Found: Error from menupromotion ALB Rule</h2><p>The Page you are looking for doesn't exist or an other error occured.</p></div></body></html>",
					"StatusCode": "404" }
                }],
                "LoadBalancerArn": {
                    "Ref": "menupromotionALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
		"orderALB": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Sub": "orderserv-${Environment}-order-alb"
                },
				"LoadBalancerAttributes": [
					 { "Key" : "deletion_protection.enabled",
					   "Value" : "false"
					 },
					 { "Key" : "routing.http.drop_invalid_header_fields.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.enabled",
					   "Value" : "true"
					 },
					 { "Key" : "access_logs.s3.bucket",
					   "Value" : {
						"Fn::Sub": "orderserv-${AWS::Region}-${Environment}-logs"
						}
					 },
					 { "Key" : "access_logs.s3.prefix",
					   "Value" : "alb"
					 }
				],
                "Scheme": "internal",
                "SecurityGroups": [{
                    "Ref": "ALBSecGroup"
                }],
                "Subnets": [
                    {"Ref": "PrivateSubnet01"},
                    {"Ref": "PrivateSubnet02"}
                ],
                "Tags": [
                    {"Key": "Name", "Value": { "Fn::Sub": "orderserv-${Environment}-order-alb" } }, 
					{"Key": "AppName", "Value": { "Ref": "AppName" }},
					{"Key": "Environment", "Value": { "Ref": "Environment" }},
					{"Key": "Tenant", "Value": "all"}
                ]
            }
        },
        "orderalbListener" :{
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
			"DependsOn" : "orderALB",
            "Properties": {
                "DefaultActions": [{
                    "Type": "fixed-response",
					"FixedResponseConfig": {
					"ContentType" : "text/html",
					"MessageBody" : "<html><head><title>404 Error Page</title></head><body><div class=\"container\"><h1>order 404</h1><h2>Page Not Found: Error from order ALB Rule</h2><p>The Page you are looking for doesn't exist or an other error occured.</p></div></body></html>",
					"StatusCode": "404" }
                }],
                "LoadBalancerArn": {
                    "Ref": "orderALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        }	
    },
    "Outputs": {
         "basketalbListenerOutput": {
            "Description": "",
            "Value": {
                "Ref": "basketalbListener"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-basket-ALB-Listener"
                }
            }
        },
        "basketalbDNSName": {
            "Description": "",
            "Value": {
                "Fn::GetAtt" : [ "basketALB", "DNSName" ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-basket-ALB-DNSName"
                }
            }
        },
		 "orderalbListenerOutput": {
            "Description": "",
            "Value": {
                "Ref": "orderalbListener"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-order-ALB-Listener"
                }
            }
        },
        "orderalbDNSName": {
            "Description": "",
            "Value": {
                "Fn::GetAtt" : [ "orderALB", "DNSName" ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-order-ALB-DNSName"
                }
            }
        },
		 "paymentalbListenerOutput": {
            "Description": "",
            "Value": {
                "Ref": "paymentalbListener"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-payment-ALB-Listener"
                }
            }
        },
        "paymentalbDNSName": {
            "Description": "",
            "Value": {
                "Fn::GetAtt" : [ "paymentALB", "DNSName" ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-payment-ALB-DNSName"
                }
            }
        },
		 "customeralbListenerOutput": {
            "Description": "",
            "Value": {
                "Ref": "customeralbListener"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-customer-ALB-Listener"
                }
            }
        },
        "customeralbDNSName": {
            "Description": "",
            "Value": {
                "Fn::GetAtt" : [ "customerALB", "DNSName" ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-customer-ALB-DNSName"
                }
            }
        },
		 "storealbListenerOutput": {
            "Description": "",
            "Value": {
                "Ref": "storealbListener"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-store-ALB-Listener"
                }
            }
        },
        "storealbDNSName": {
            "Description": "",
            "Value": {
                "Fn::GetAtt" : [ "storeALB", "DNSName" ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-store-ALB-DNSName"
                }
            }
        },
		 "menupromotionalbListenerOutput": {
            "Description": "",
            "Value": {
                "Ref": "menupromotionalbListener"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-menupromotion-ALB-Listener"
                }
            }
        },
        "menupromotionalbDNSName": {
            "Description": "",
            "Value": {
                "Fn::GetAtt" : [ "menupromotionALB", "DNSName" ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-menupromotion-ALB-DNSName"
                }
            }
        }
    }
}